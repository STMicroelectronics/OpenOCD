# This is a nucleo-g474re with a single STM32G474RET6U chip.
# www.st.com/en/evaluation-tools/nucleo-g474re.html
#
# Two Winbond W25Q512FV attached, dual-1-line or dual-4-line mode
#

# This is for using the onboard STLINK
source [find interface/stlink.cfg]

transport select hla_swd

# increase working area to 64KB
set WORKAREASIZE 0x10000

# enable stmqspi
if {![info exists QUADSPI]} {
	set QUADSPI 1
}

source [find target/stm32g4x.cfg]

#reset_config srst_only srst_nogate connect_assert_srst

# QUADSPI initialization
# flash = 1: only flash1, = 2: only flash 2, anything else: both flash1 and flash2
# qpi: 4-line mode
proc qspi_init { flash qpi } {
	global a
	mmw 0x4002104C 0x0000007F 0				;# RCC_AHB2ENR |= GPIOAEN-GPIOGEN (enable clocks)
	mmw 0x40021050 0x00000100 0				;# RCC_AHB3ENR |= QSPIEN (enable clock)
	sleep 1									;# Wait for clock startup

	# PA07:AF10:V, PA06:AF10:V, PB11:AF10:H, PB10:AF10:V, PB01:AF10:V, PB00:AF10:V
	# PC04:AF10:V, PC03:AF10:V, PC02:AF10:V, PC01:AF10:V

	# Port A: PA07:AF10:V, PA06:AF10:V
	mmw 0x48000000 0x0000A000 0x00005000	;# MODER
	mmw 0x48000008 0x0000F000 0x00000000	;# OSPEEDR
	mmw 0x4800000C 0x00000000 0x0000F000	;# PUPDR
	mmw 0x48000020 0xAA000000 0x55000000	;# AFRL
	# Port B: PB11:AF10:H, PB10:AF10:V, PB01:AF10:V, PB00:AF10:V
	mmw 0x48000400 0x00A0000A 0x00500005	;# MODER
	mmw 0x48000408 0x00B0000F 0x00400000	;# OSPEEDR
	mmw 0x4800040C 0x00000000 0x00F0000F	;# PUPDR
	mmw 0x48000420 0x000000AA 0x00000055	;# AFRL
	mmw 0x48000424 0x0000AA00 0x00005500	;# AFRH
	# Port C: PC04:AF10:V, PC03:AF10:V, PC02:AF10:V, PC01:AF10:V
	mmw 0x48000800 0x000002A8 0x00000154	;# MODER
	mmw 0x48000808 0x000003FC 0x00000000	;# OSPEEDR
	mmw 0x4800080C 0x00000000 0x000003FC	;# PUPDR
	mmw 0x48000820 0x000AAAA0 0x00055550	;# AFRL

	if { $flash == 1 } {
		# for flash 1 only w25q256fv
		mww 0xA0001000 0x01500018			;# QUADSPI_CR: PRESCALER=1, APMS=1, FTHRES=0, FSEL=0, DFM=0, SSHIFT=1, TCEN=1
		mww 0xA0001004 0x00180100			;# QUADSPI_DCR: FSIZE=0x18, CSHT=0x01, CKMODE=0
	} else {
		if { $flash == 2 } {
			# this is not possible on nucleo-g474re, as only bank 1 ncs is available
			# hence flash 2 can only be selected in conjunction with flash 1
			error "flash 2 only not possible on this board"

			# for flash 2 only w25q256fv
			mww 0xA0001000 0x01500098		;# QUADSPI_CR: PRESCALER=1, APMS=1, FTHRES=0, FSEL=1, DFM=0, SSHIFT=1, TCEN=1
			mww 0xA0001004 0x00180100		;# QUADSPI_DCR: FSIZE=0x18, CSHT=0x01, CKMODE=0
		} else {
			# for dual flash mode 2 * w25q256fv
			mww 0xA0001000 0x01500058		;# QUADSPI_CR: PRESCALER=1, APMS=1, FTHRES=0, FSEL=0, DFM=1, SSHIFT=1, TCEN=1
			mww 0xA0001004 0x00190100		;# QUADSPI_DCR: FSIZE=0x19, CSHT=0x01, CKMODE=0
		}
	}

	mww 0xA0001030 0x00001000				;# QUADSPI_LPTR: deactivate CS after 4096 clocks when FIFO is full
	mww 0xA0001014 0x0D002503				;# QUADSPI_CCR: FMODE=0x3, DMODE=0x1, DCYC=0x0, ADSIZE=0x3, ADMODE=0x1, IMODE=0x1
	mmw 0xA0001000 0x00000001 0				;# QUADSPI_CR: EN=1

	mww 0xA0001014 0x000003FF				;# QUADSPI_CCR: FMODE=0x0, DMODE=0x0, DCYC=0x0, ADSIZE=0x0, ADMODE=0x0, IMODE=0x3, INSTR=Exit QPI
	sleep 1

	# Enter 4-byte mode
	mww 0xA0001014 0x000001B7				;# QUADSPI_CCR: FMODE=0x0, DMODE=0x0, DCYC=0x0, ADSIZE=0x0, ADMODE=0x0, IMODE=0x1, INSTR=Enter 4-byte
	sleep 1

	if { $qpi == 1 } {
		# Enter QPI mode
		mww 0xA0001014 0x00000138			;# QUADSPI_CCR: FMODE=0x0, DMODE=0x0, DCYC=0x0, ADSIZE=0x0, ADMODE=0x0, IMODE=0x1, INSTR=Enter QPI
		sleep 1

		# memory-mapped fast read mode with 3-byte addresses and 2 dummy cycles (for read only)
		mww 0xA0001014 0x0F083F0B			;# QUADSPI_CCR: FMODE=0x3, DMODE=0x3, DCYC=0x2, ADSIZE=0x3, ADMODE=0x3, IMODE=0x3, INSTR=Fast READ

		# as QSPI is set to instruction/address/data on 4 lines in memory mapped mode, driver will *always*
		# use this setting (i. e. for probe, erase, write)
		# the 'Enter QPI mode' command is chip specific, additionally both w25q128fv must be configured in advance by
		# programming the *NON*-volatile QE bit (bit 1 in status register 2), e. g. by the following commands
		#
		# stmqspi cmd $a 0 0x06
		# stmqspi cmd $a 0 0x31 0x02 0x02
		# stmqspi cmd $a 2 0x35
		#
		# the last one should return  '-> 02 02' to indicate successful setting of QE bit
		# furthermore, the flash chip changes its id from 0x1940ef to 0x1960ef upon entering QPI mode
	} else {
		# memory-mapped read mode with 4-byte addresses
		mww 0xA0001014 0x0D20350B			;# QUADSPI_CCR: FMODE=0x3, DMODE=0x1, DCYC=0x8, ADSIZE=0x3, ADMODE=0x1, IMODE=0x1, INSTR=READ
	}
}

$_TARGETNAME configure -event reset-init {
	global QUADSPI

	mmw 0x40022000 0x00000007 0x00000008	;# FLASH_ACR: 7 WS for 144 MHz HCLK
	sleep 1
	mmw 0x40021000 0x00000100 0x00000000	;# RCC_CR: HSI on
	mww 0x4002100C 0x01004832				;# RCC_PLLCFGR: 144 MHz PLLREN=1, PLLM=4, PLLN=72, PLLR=2, HSI
	mww 0x40021008 0x00008001				;# RCC_CFGR: HSI16, APB1: /1, APB2: /1
	mmw 0x40021000 0x01000000 0x00000000	;# RCC_CR: PLL on
	sleep 1
	mmw 0x40021008 0x00000003 0x00000000	;# RCC_CFGR: switch to PLL
	sleep 1

	adapter speed 24000

	if { $QUADSPI } {
		qspi_init 0 1
	}
}
